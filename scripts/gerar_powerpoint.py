"""
Gerador de Apresenta√ß√£o PowerPoint

Este script cria uma apresenta√ß√£o profissional com os resultados da an√°lise.
"""

from pptx import Presentation
from pptx.util import Inches, Pt
from pptx.enum.text import PP_ALIGN
from pptx.dml.color import RGBColor
from pathlib import Path
import pandas as pd


def criar_apresentacao():
    """Cria apresenta√ß√£o PowerPoint com os resultados"""
    
    # Criar apresenta√ß√£o
    prs = Presentation()
    prs.slide_width = Inches(10)
    prs.slide_height = Inches(7.5)
    
    # Definir diret√≥rio de resultados
    resultados_dir = Path('resultados')
    
    print("üìä Gerando apresenta√ß√£o PowerPoint...")
    
    # === SLIDE 1: T√çTULO ===
    print("   Slide 1: T√≠tulo")
    slide1 = prs.slides.add_slide(prs.slide_layouts[6])  # Layout em branco
    
    # Adicionar t√≠tulo
    left = Inches(1)
    top = Inches(2.5)
    width = Inches(8)
    height = Inches(2)
    
    txBox = slide1.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.text = "An√°lise Comparativa de Gastos\nda Cota Parlamentar"
    
    p = tf.paragraphs[0]
    p.font.size = Pt(44)
    p.font.bold = True
    p.font.color.rgb = RGBColor(0, 51, 102)
    p.alignment = PP_ALIGN.CENTER
    
    # Subt√≠tulo
    left = Inches(1)
    top = Inches(4.8)
    txBox2 = slide1.shapes.add_textbox(left, top, width, Inches(0.8))
    tf2 = txBox2.text_frame
    tf2.text = "Por Partido e Estado - C√¢mara dos Deputados"
    p2 = tf2.paragraphs[0]
    p2.font.size = Pt(24)
    p2.font.color.rgb = RGBColor(100, 100, 100)
    p2.alignment = PP_ALIGN.CENTER
    
    # === SLIDE 2: METODOLOGIA ===
    print("   Slide 2: Metodologia")
    slide2 = prs.slides.add_slide(prs.slide_layouts[5])  # Layout t√≠tulo + conte√∫do
    
    # T√≠tulo
    title2 = slide2.shapes.title
    title2.text = "Metodologia"
    title2.text_frame.paragraphs[0].font.size = Pt(40)
    title2.text_frame.paragraphs[0].font.bold = True
    title2.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Conte√∫do
    left = Inches(0.8)
    top = Inches(1.8)
    width = Inches(8.4)
    height = Inches(5)
    
    txBox = slide2.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.word_wrap = True
    
    conteudo = [
        ("üìä Fonte 1: CSV Estruturado", "~285.000 registros de despesas da Cota Parlamentar"),
        ("üåê Fonte 2: API JSON", "513 deputados em exerc√≠cio com dados cadastrais"),
        ("üîó Cruzamento", "Nome do parlamentar como chave de liga√ß√£o"),
        ("üßπ Limpeza", "Remo√ß√£o de valores inv√°lidos e padroniza√ß√£o de nomes"),
        ("üìà An√°lise", "Agrega√ß√µes por partido, estado e tipo de despesa")
    ]
    
    for titulo, descricao in conteudo:
        p = tf.add_paragraph()
        p.text = titulo
        p.font.size = Pt(20)
        p.font.bold = True
        p.font.color.rgb = RGBColor(0, 51, 102)
        p.space_after = Pt(5)
        
        p2 = tf.add_paragraph()
        p2.text = descricao
        p2.font.size = Pt(16)
        p2.font.color.rgb = RGBColor(80, 80, 80)
        p2.level = 1
        p2.space_after = Pt(15)
    
    # === SLIDE 3: GASTOS POR PARTIDO ===
    print("   Slide 3: Gastos por Partido")
    slide3 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title3 = slide3.shapes.title
    title3.text = "Gastos por Partido"
    title3.text_frame.paragraphs[0].font.size = Pt(40)
    title3.text_frame.paragraphs[0].font.bold = True
    title3.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Adicionar imagem
    img_path = resultados_dir / 'gastos_por_partido.png'
    if img_path.exists():
        left = Inches(0.5)
        top = Inches(1.8)
        pic = slide3.shapes.add_picture(str(img_path), left, top, width=Inches(9))
    
    # Adicionar insight
    left = Inches(0.8)
    top = Inches(6.5)
    width = Inches(8.4)
    height = Inches(0.8)
    
    txBox = slide3.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.text = "üí° Importante: M√©dia por deputado normaliza o tamanho dos partidos"
    p = tf.paragraphs[0]
    p.font.size = Pt(14)
    p.font.italic = True
    p.font.color.rgb = RGBColor(100, 100, 100)
    p.alignment = PP_ALIGN.CENTER
    
    # === SLIDE 4: GASTOS POR ESTADO ===
    print("   Slide 4: Gastos por Estado")
    slide4 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title4 = slide4.shapes.title
    title4.text = "Gastos por Estado"
    title4.text_frame.paragraphs[0].font.size = Pt(40)
    title4.text_frame.paragraphs[0].font.bold = True
    title4.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Adicionar imagem
    img_path = resultados_dir / 'gastos_por_estado.png'
    if img_path.exists():
        left = Inches(0.5)
        top = Inches(1.8)
        pic = slide4.shapes.add_picture(str(img_path), left, top, width=Inches(9))
    
    # Adicionar insight
    left = Inches(0.8)
    top = Inches(6.5)
    width = Inches(8.4)
    height = Inches(0.8)
    
    txBox = slide4.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.text = "üí° SP, MG e RJ lideram em volume, mas m√©dia revela efici√™ncia relativa"
    p = tf.paragraphs[0]
    p.font.size = Pt(14)
    p.font.italic = True
    p.font.color.rgb = RGBColor(100, 100, 100)
    p.alignment = PP_ALIGN.CENTER
    
    # === SLIDE 5: TIPOS DE DESPESA ===
    print("   Slide 5: Tipos de Despesa")
    slide5 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title5 = slide5.shapes.title
    title5.text = "Tipos de Despesa Mais Comuns"
    title5.text_frame.paragraphs[0].font.size = Pt(40)
    title5.text_frame.paragraphs[0].font.bold = True
    title5.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Adicionar imagem
    img_path = resultados_dir / 'tipos_despesa.png'
    if img_path.exists():
        left = Inches(0.8)
        top = Inches(1.5)
        pic = slide5.shapes.add_picture(str(img_path), left, top, width=Inches(8.4))
    
    # === SLIDE 6: TOP DEPUTADOS ===
    print("   Slide 6: Top Deputados")
    slide6 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title6 = slide6.shapes.title
    title6.text = "Deputados com Maiores Gastos"
    title6.text_frame.paragraphs[0].font.size = Pt(40)
    title6.text_frame.paragraphs[0].font.bold = True
    title6.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Adicionar imagem
    img_path = resultados_dir / 'top_deputados.png'
    if img_path.exists():
        left = Inches(0.8)
        top = Inches(1.5)
        pic = slide6.shapes.add_picture(str(img_path), left, top, width=Inches(8.4))
    
    # === SLIDE 7: RESUMO GERAL ===
    print("   Slide 7: Resumo Geral")
    slide7 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title7 = slide7.shapes.title
    title7.text = "Resumo Geral"
    title7.text_frame.paragraphs[0].font.size = Pt(40)
    title7.text_frame.paragraphs[0].font.bold = True
    title7.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Adicionar imagem
    img_path = resultados_dir / 'resumo_geral.png'
    if img_path.exists():
        left = Inches(0.3)
        top = Inches(1.5)
        pic = slide7.shapes.add_picture(str(img_path), left, top, width=Inches(9.4))
    
    # === SLIDE 8: PRINCIPAIS INSIGHTS ===
    print("   Slide 8: Principais Insights")
    slide8 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title8 = slide8.shapes.title
    title8.text = "Principais Insights"
    title8.text_frame.paragraphs[0].font.size = Pt(40)
    title8.text_frame.paragraphs[0].font.bold = True
    title8.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Ler dados para insights
    try:
        df_partido = pd.read_csv(resultados_dir / 'gastos_por_partido.csv')
        df_estado = pd.read_csv(resultados_dir / 'gastos_por_estado.csv')
        df_despesa = pd.read_csv(resultados_dir / 'gastos_por_tipo_despesa.csv')
        df_deputados = pd.read_csv(resultados_dir / 'top_deputados.csv')
        
        # Preparar insights
        partido_top = df_partido.iloc[0]
        estado_top = df_estado.iloc[0]
        despesa_top = df_despesa.iloc[0]
        deputado_top = df_deputados.iloc[0]
        
        total_gasto = df_partido['total_gasto'].sum()
        
        insights = [
            f"üí∞ Total gasto: R$ {total_gasto:,.2f}",
            f"üèÜ Partido com maior gasto: {partido_top['partido']} (R$ {partido_top['total_gasto']:,.2f})",
            f"üìç Estado com maior gasto: {estado_top['uf']} (R$ {estado_top['total_gasto']:,.2f})",
            f"üìä Despesa mais comum: {despesa_top['tipo_despesa'][:40]}... ({despesa_top['percentual']:.1f}%)",
            f"üë§ Maior gastador: {deputado_top['nome_deputado']} ({deputado_top['partido']}-{deputado_top['uf']})"
        ]
        
    except Exception as e:
        insights = [
            "üí∞ An√°lise completa de gastos parlamentares",
            "üèÜ Identifica√ß√£o dos maiores gastadores",
            "üìç Compara√ß√£o regional detalhada",
            "üìä Categoriza√ß√£o de despesas",
            "üë§ Ranking individualizado"
        ]
    
    # Adicionar insights
    left = Inches(1)
    top = Inches(2)
    width = Inches(8)
    height = Inches(5)
    
    txBox = slide8.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.word_wrap = True
    
    for insight in insights:
        p = tf.add_paragraph()
        p.text = insight
        p.font.size = Pt(22)
        p.font.color.rgb = RGBColor(0, 51, 102)
        p.space_after = Pt(20)
    
    # === SLIDE 9: CONCLUS√ÉO ===
    print("   Slide 9: Conclus√£o")
    slide9 = prs.slides.add_slide(prs.slide_layouts[5])
    
    title9 = slide9.shapes.title
    title9.text = "Conclus√£o"
    title9.text_frame.paragraphs[0].font.size = Pt(40)
    title9.text_frame.paragraphs[0].font.bold = True
    title9.text_frame.paragraphs[0].font.color.rgb = RGBColor(0, 51, 102)
    
    # Conte√∫do
    left = Inches(1.5)
    top = Inches(2.2)
    width = Inches(7)
    height = Inches(4.5)
    
    txBox = slide9.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.word_wrap = True
    
    conclusoes = [
        "‚úÖ Cruzamento bem-sucedido de duas fontes de dados",
        "‚úÖ Identifica√ß√£o clara dos padr√µes de gastos",
        "‚úÖ Normaliza√ß√£o permite compara√ß√£o justa",
        "‚úÖ Visualiza√ß√µes facilitam interpreta√ß√£o",
        "‚úÖ C√≥digo modular e reutiliz√°vel"
    ]
    
    for conclusao in conclusoes:
        p = tf.add_paragraph()
        p.text = conclusao
        p.font.size = Pt(24)
        p.font.color.rgb = RGBColor(0, 51, 102)
        p.space_after = Pt(25)
    
    # Rodap√©
    left = Inches(1)
    top = Inches(6.5)
    width = Inches(8)
    height = Inches(0.8)
    
    txBox = slide9.shapes.add_textbox(left, top, width, height)
    tf = txBox.text_frame
    tf.text = "Fontes: Portal de Dados Abertos da C√¢mara dos Deputados"
    p = tf.paragraphs[0]
    p.font.size = Pt(12)
    p.font.italic = True
    p.font.color.rgb = RGBColor(120, 120, 120)
    p.alignment = PP_ALIGN.CENTER
    
    # Salvar apresenta√ß√£o
    output_path = 'Apresentacao_Analise_Gastos_Parlamentares.pptx'
    prs.save(output_path)
    
    print(f"\n‚úÖ Apresenta√ß√£o criada com sucesso!")
    print(f"üìÑ Arquivo: {output_path}")
    print(f"üìä Total de slides: 9")
    
    return output_path


if __name__ == '__main__':
    print("\n" + "=" * 70)
    print("  GERADOR DE APRESENTA√á√ÉO POWERPOINT")
    print("=" * 70 + "\n")
    
    try:
        arquivo = criar_apresentacao()
        
        print("\n" + "=" * 70)
        print("  üéâ SUCESSO!")
        print("=" * 70)
        print(f"\n  Abra o arquivo: {arquivo}")
        print("  Para visualizar a apresenta√ß√£o.\n")
        
    except Exception as e:
        print(f"\n‚ùå ERRO: {e}")
        import traceback
        traceback.print_exc()
